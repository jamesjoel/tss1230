{"ast":null,"code":"/**\n * axios-middleware v0.3.1\n * (c) 2018 Émile Bergeron\n * @license MIT\n */\n/**\n * @property {Array} middlewares stack\n * @property {AxiosInstance} http\n * @property {Function} originalAdapter\n * @property {Number} _requestInterceptor\n * @property {Number} _responseInterceptor\n */\nvar HttpMiddlewareService = function HttpMiddlewareService(axios) {\n  this.middlewares = [];\n  this.setHttp(axios);\n};\n\n/**\n * @param {AxiosInstance} axios\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.setHttp = function setHttp(axios) {\n  var this$1 = this;\n  this.unsetHttp();\n  if (axios) {\n    this.http = axios;\n    this.originalAdapter = axios.defaults.adapter;\n    axios.defaults.adapter = function (config) {\n      return this$1.adapter(config);\n    };\n  }\n  return this;\n};\n\n/**\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.unsetHttp = function unsetHttp() {\n  if (this.http) {\n    this.http.defaults.adapter = this.originalAdapter;\n    this.http = null;\n  }\n  return this;\n};\n\n/**\n * @param {HttpMiddleware} middleware\n * @returns {boolean} true if the middleware is already registered.\n */\nHttpMiddlewareService.prototype.has = function has(middleware) {\n  return this.middlewares.indexOf(middleware) > -1;\n};\n\n/**\n * Adds a middleware or an array of middlewares to the stack.\n * @param {HttpMiddleware|Array} middlewares\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.register = function register(middlewares) {\n  var this$1 = this;\n\n  // eslint-disable-next-line no-param-reassign\n  if (!Array.isArray(middlewares)) {\n    middlewares = [middlewares];\n  }\n\n  // Test if middlewares are registered more than once.\n  middlewares.forEach(function (middleware) {\n    if (this$1.has(middleware)) {\n      throw new Error('Middleware already registered');\n    }\n    this$1.middlewares.push(middleware);\n  });\n  return this;\n};\n\n/**\n * Removes a middleware from the registered stack.\n * @param {HttpMiddleware} middleware\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.unregister = function unregister(middleware) {\n  var index = this.middlewares.indexOf(middleware);\n  if (index > -1) {\n    this.middlewares.splice(index, 1);\n  }\n  return this;\n};\n\n/**\n * Removes all the middleware from the stack.\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.reset = function reset() {\n  this.middlewares.length = 0;\n  return this;\n};\n\n/**\n * @param config\n * @returns {Promise}\n */\nHttpMiddlewareService.prototype.adapter = function adapter(config) {\n  var this$1 = this;\n  var chain = [function (conf) {\n    return this$1._onSync(this$1.originalAdapter.call(this$1.http, conf));\n  }, undefined];\n  var promise = Promise.resolve(config);\n  this.middlewares.forEach(function (middleware) {\n    chain.unshift(middleware.onRequest && function (conf) {\n      return middleware.onRequest(conf);\n    }, middleware.onRequestError && function (error) {\n      return middleware.onRequestError(error);\n    });\n  });\n  this.middlewares.forEach(function (middleware) {\n    chain.push(middleware.onResponse && function (response) {\n      return middleware.onResponse(response);\n    }, middleware.onResponseError && function (error) {\n      return middleware.onResponseError(error);\n    });\n  });\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n  return promise;\n};\n\n/**\n * @param promise\n * @returns {Promise}\n * @private\n */\nHttpMiddlewareService.prototype._onSync = function _onSync(promise) {\n  return this.middlewares.reduce(function (acc, middleware) {\n    return middleware.onSync ? middleware.onSync(acc) : acc;\n  }, promise);\n};\nvar index_esm = {\n  Service: HttpMiddlewareService,\n  version: '0.3.1'\n};\nexport default index_esm;\nexport { HttpMiddlewareService as Service };","map":{"version":3,"names":["HttpMiddlewareService","axios","middlewares","setHttp","prototype","this$1","unsetHttp","http","originalAdapter","defaults","adapter","config","has","middleware","indexOf","register","Array","isArray","forEach","Error","push","unregister","index","splice","reset","length","chain","conf","_onSync","call","undefined","promise","Promise","resolve","unshift","onRequest","onRequestError","error","onResponse","response","onResponseError","then","shift","reduce","acc","onSync","index_esm","Service","version"],"sources":["E:/tss12_30/react2/node_modules/axios-middleware/dist/axios-middleware.esm.js"],"sourcesContent":["/**\n * axios-middleware v0.3.1\n * (c) 2018 Émile Bergeron\n * @license MIT\n */\n/**\n * @property {Array} middlewares stack\n * @property {AxiosInstance} http\n * @property {Function} originalAdapter\n * @property {Number} _requestInterceptor\n * @property {Number} _responseInterceptor\n */\nvar HttpMiddlewareService = function HttpMiddlewareService(axios) {\n    this.middlewares = [];\n\n    this.setHttp(axios);\n};\n\n/**\n * @param {AxiosInstance} axios\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.setHttp = function setHttp (axios) {\n        var this$1 = this;\n\n    this.unsetHttp();\n\n    if (axios) {\n        this.http = axios;\n        this.originalAdapter = axios.defaults.adapter;\n        axios.defaults.adapter = function (config) { return this$1.adapter(config); };\n    }\n    return this;\n};\n\n/**\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.unsetHttp = function unsetHttp () {\n    if (this.http) {\n        this.http.defaults.adapter = this.originalAdapter;\n        this.http = null;\n    }\n    return this;\n};\n\n/**\n * @param {HttpMiddleware} middleware\n * @returns {boolean} true if the middleware is already registered.\n */\nHttpMiddlewareService.prototype.has = function has (middleware) {\n    return this.middlewares.indexOf(middleware) > -1;\n};\n\n/**\n * Adds a middleware or an array of middlewares to the stack.\n * @param {HttpMiddleware|Array} middlewares\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.register = function register (middlewares) {\n        var this$1 = this;\n\n    // eslint-disable-next-line no-param-reassign\n    if (!Array.isArray(middlewares)) { middlewares = [middlewares]; }\n\n    // Test if middlewares are registered more than once.\n    middlewares.forEach(function (middleware) {\n        if (this$1.has(middleware)) {\n            throw new Error('Middleware already registered');\n        }\n        this$1.middlewares.push(middleware);\n    });\n    return this;\n};\n\n/**\n * Removes a middleware from the registered stack.\n * @param {HttpMiddleware} middleware\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.unregister = function unregister (middleware) {\n    var index = this.middlewares.indexOf(middleware);\n    if (index > -1) {\n        this.middlewares.splice(index, 1);\n    }\n    return this;\n};\n\n/**\n * Removes all the middleware from the stack.\n * @returns {HttpMiddlewareService}\n */\nHttpMiddlewareService.prototype.reset = function reset () {\n    this.middlewares.length = 0;\n    return this;\n};\n\n/**\n * @param config\n * @returns {Promise}\n */\nHttpMiddlewareService.prototype.adapter = function adapter (config) {\n        var this$1 = this;\n\n    var chain = [function (conf) { return this$1._onSync(this$1.originalAdapter.call(this$1.http, conf)); }, undefined];\n    var promise = Promise.resolve(config);\n\n    this.middlewares.forEach(function (middleware) {\n        chain.unshift(\n            middleware.onRequest && (function (conf) { return middleware.onRequest(conf); }),\n            middleware.onRequestError && (function (error) { return middleware.onRequestError(error); })\n        );\n    });\n\n    this.middlewares.forEach(function (middleware) {\n        chain.push(\n            middleware.onResponse && (function (response) { return middleware.onResponse(response); }),\n            middleware.onResponseError && (function (error) { return middleware.onResponseError(error); })\n        );\n    });\n\n    while (chain.length) {\n        promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n};\n\n/**\n * @param promise\n * @returns {Promise}\n * @private\n */\nHttpMiddlewareService.prototype._onSync = function _onSync (promise) {\n    return this.middlewares.reduce(\n        function (acc, middleware) { return (middleware.onSync ? middleware.onSync(acc) : acc); },\n        promise\n    );\n};\n\nvar index_esm = {\n    Service: HttpMiddlewareService,\n    version: '0.3.1',\n};\n\nexport default index_esm;\nexport { HttpMiddlewareService as Service };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}